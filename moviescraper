#!/bin/bash

if [ "$1" == "update" ]; then
  echo "updating `basename $0`...."
  mv newmovie newmovie.old
  # git install link
  Update complete.
  rm -rf /usr/local/bin/moviescraper
  exit 0
fi
if [ "$1" == "help" ]; then
  echo "thee shall not recieve any help"
  exit 0
fi

rm -rf /tmp/link ; rm -rf /tmp/link2
echo ''
printf 'Enter movie name =>  '
read query
# remove punct and lowecase all letters
querylower=$(echo $query | awk '{print tolower($0)}' | sed 's/[[:punct:]]//g')
printf 'Enter release year =>  '
read release_query
append_link=$(echo $querylower $release_query)
movie=$(echo $append_link | sed -r 's/[A-Za-z0-9_]+/&-/g' | sed 's/ //g' | sed 's/.$//')
link=\"https://yts.mx/movies/$movie\" 


# embedded code
pylink=$link python3 << END
from bs4 import BeautifulSoup
import requests
import random
import os

my_url = os.getenv("pylink")
url = my_url.replace('"', '')

user_agent_list = [
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36",
    "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/605.1.15 (KHTML, like Gecko)",
    "Mozilla/5.0 (X11; CrOS x86_64 14816.131.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36",
    "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36"
]

user_agent = random.choice(user_agent_list)
headers = {'User-Agent': user_agent}
result = requests.get(url,headers=headers)
page = BeautifulSoup(result.text, "html.parser")
for line in page.find_all(["a"], href=True, text=["720p.BluRay","1080p.BluRay","2160p.BluRay","720p.WEB","1080p.WEB","2160p.WEB","720p.WEB*","1080p.WEB*"]):
    # link = print(line['href'], end="   ")
    # quality = print(line.text)
    with open("/tmp/link", "a") as f:
        print(line['href'], end="   ", file=f)
        print(line.text, file=f)  
END

echo ''
cat /tmp/link
echo ''
# stream movie
while true; do
	read -p "Would you like to stream this movie? (y/n):  " yn
    case $yn in
        [Yy]* ) cat /tmp/link | awk '{ print $1 }' | head -n 1 >  /tmp/link2 ; streamlink=$(cat /tmp/link2 ) ; peerflix $streamlink ; rm -rf /tmp/link && rm -rf /tmp/link2 ; break;;
        [Nn]* ) exit;;
        * ) echo "Please answer yes or no.";;
    esac
done

